//<<Борзилов С 15.08.2023 ТЗ  Доработка документа ППО «Заказ-наряд» в базе DMS 
	Пользователь = Пользователи.ТекущийПользователь();
	СотрудникДляПроверки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователь,"Сотрудник"); 
	Если ЗначениеЗаполнено(СотрудникДляПроверки) Тогда
		ТиповаяДолжностьСотрудника = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СотрудникДляПроверки,"ТиповаяДолжность");	
	КонецЕсли;
	
	Если Не ТиповаяДолжностьСотрудника = Справочники.ТиповыеДолжности.ИнженерПоГарантии Тогда
		//>>Борзилов С
		ПодвидРемонта = Справочники.ПодвидыРемонта.НайтиПоКоду("000000001");
		//<<Борзилов С 15.08.2023 ТЗ Доработка документа ППО «Заказ-наряд» в базе DMS   
	КонецЕсли;
	//>>Борзилов С

//<<Борзилов С 14.08.2023 ТЗ Доработка документа ППО «Заказ-наряд» в базе DMS.
		ПеремПодвидРемонта = Справочники.ПредопределенныеЭлементы.Справочник_Контрагенты_КонтрагентТехническойПоддержкиКЛЮЧАВТО;
		Если ПодвидРемонта = ПеремПодвидРемонта.Элемент Тогда
			Если ПеремПодвидРемонта.СписокЭлементов.Количество() > 0 Тогда
				Контрагент = ПеремПодвидРемонта.СписокЭлементов[0].Элемент;
			КонецЕсли;
			
		КонецЕсли;
		
		
		//>>Борзилов С

//<<Борзилов С 11.08.2023 ТЗ Доработка документа ППО «Заказ-наряд» в базе DMS\
	Если БлокироватьВыборПВРКоммерческийФлит() И БлокироватьВыборВсеПВРКромеКоммерческих() Тогда
		
		Пользователь = Пользователи.ТекущийПользователь();
		СотрудникДляПроверки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователь,"Сотрудник"); 
		Если ЗначениеЗаполнено(СотрудникДляПроверки) Тогда
			ТиповаяДолжностьСотрудника = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СотрудникДляПроверки,"ТиповаяДолжность");	
		КонецЕсли;
		
		Если ТиповаяДолжностьСотрудника = Справочники.ТиповыеДолжности.ИнженерПоГарантии Тогда	
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПодвидыРемонта.Ссылка КАК Ссылка,
			|	ПодвидыРемонта.ТипРемонта КАК ТипРемонта,
			|	ПодвидыРемонта.Владелец.Ссылка КАК ВладелецСсылка
			|ИЗ
			|	Справочник.ПодвидыРемонта КАК ПодвидыРемонта
			|ГДЕ
			|	НЕ ПодвидыРемонта.ПометкаУдаления
			|	И ПодвидыРемонта.Ссылка <> &Ссылка
			|	И ПодвидыРемонта.ОсобыйПодвид = &ОсобыйПодвид
			|	И НЕ ПодвидыРемонта.НеИспользовать"
			;
			Запрос.УстановитьПараметр("ОсобыйПодвид",Перечисления.ОсобыеПодвидыРемонта.Коммерческий);
			Запрос.УстановитьПараметр("Ссылка",ПВРКоммерческийФлитСсылка);
			ДляВыборки = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
			
			СписокДляОтбора = Новый СписокЗначений;
			СписокДляОтбора.ЗагрузитьЗначения(ДляВыборки);
			СписокДляОтбора.Добавить(Справочники.ПредопределенныеЭлементы.ПолучитьЗначение("Справочник_Контрагенты_КонтрагентТехническойПоддержкиКЛЮЧАВТО"));
			
			
			ФормаСпискаПодвидов.Отбор.Ссылка.ВидСравнения = ВидСравнения.ВСписке;
			ФормаСпискаПодвидов.Отбор.Ссылка.Значение = СписокДляОтбора;
			ФормаСпискаПодвидов.Отбор.Ссылка.Использование = Истина;
			
			
			ФормаСпискаПодвидов.Отбор.ОсобыйПодвид.Использование = Ложь;
		КонецЕсли;
	КонецЕсли;
	//>>Борзилов С

// <<Борзилов С.С. 23.08.2023 000021418
	//Было:
	//Ответ = Вопрос("Необходимо ввести контактынй телефон клиента! Хотите сейчас заполнить?", РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да, "ВНИМАНИЕ!");
	//Стало: 
	Ответ = Вопрос("Необходимо ввести контактный телефон клиента! Хотите сейчас заполнить?", РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да, "ВНИМАНИЕ!");
	// Борзилов С.С. 23.08.2023 000021418	
			Если Ответ = КодВозвратаДиалога.Да Тогда 
				ТелефонCRMОткрытие(ЭлементыФормы.ТелефонCRM, Ложь);
				Если Не ЗначениеЗаполнено(ТелефонCRM) Или СтрДлина(ТелефонCRM) < 14 Тогда
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "Контактный телефон клиента не введен или введен не полностью!";
					Сообщение.Сообщить();
					Отказ = Истина;
				КонецЕсли;
			ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда 
				Отказ = Истина;
			КонецЕсли;
			Если Отказ Тогда
				Сообщение = Новый СообщениеПользователю;
	// Борзилов С.С. 23.08.2023 000021418 
	//Было:
	//Сообщение.Текст = "Необходимо корректно ввести контактынй телефон клиента!";
	//Стало:
    Сообщение.Текст = "Необходимо корректно ввести контактный телефон клиента!";
	// Борзилов С.С. 23.08.2023 000021418>>

Схема при которой не дает заполнять документ при недостатке остатков на складе
Запрос = Новый Запрос;
       Запрос.Текст = "ВЫБРАТЬ
                        |    Номенклатура.НаименованиеПолное,
                        |    Номенклатура.ЕдиницаИзмерения,
                        |    Номенклатура.СтавкаНДС,
                        |    Номенклатура.НоменклатурнаяГруппа,
                        |    Номенклатура.СчетУчетаЗапасов,
                        |    Номенклатура.СчетУчетаЗатрат,
                        |    Номенклатура.Ссылка, 
                        |    Номенклатура.ЭтоГруппа
                        | ИЗ
                        |    Справочник.Номенклатура КАК Номенклатура"; 
       РезультатЗапроса = Запрос.Выполнить();
       СпрОбъект = РезультатЗапроса.Выбрать();    
       Пока СпрОбъект.Следующий()  Цикл
          СтрокаУИ = Объект.XMLСтрока(СпрОбъект.Ссылка);
          GUID = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(СокрЛП(СтрокаУИ)));          
        КонецЦикла;

//  1. Получение запросом данных документа
    Запрос = Новый Запрос;
    Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
    Запрос.Текст =
        "ВЫБРАТЬ
        |   Товары.Номенклатура КАК Номенклатура,
        |   СУММА(Товары.Количество) КАК Количество
        |ПОМЕСТИТЬ Товары
        |ИЗ
        |   Документ.РеализацияТоваровУслуг.Товары КАК Товары
        |ГДЕ
        |   Товары.Ссылка = &Ссылка
        |
        |СГРУППИРОВАТЬ ПО
        |   Товары.Номенклатура
        |
        |ИНДЕКСИРОВАТЬ ПО
        |   Номенклатура
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   Товары.Номенклатура КАК Номенклатура,
        |   Товары.Количество КАК Количество
        |ИЗ
        |   Товары КАК Товары";
    Запрос.УстановитьПараметр("Ссылка", Ссылка);
    РезультатЗапроса = Запрос.Выполнить();
   
    //  2. Формирование движений-расход регистра
    Движения.СвободныеОстатки.Очистить();
    ВыборкаТовары = РезультатЗапроса.Выбрать();
    Пока ВыборкаТовары.Следующий() Цикл
        Движение = Движения.СвободныеОстатки.ДобавитьРасход();
        Движение.Период = Дата;
        Движение.Номенклатура = ВыборкаТовары.Номенклатура;
        Движение.Количество = ВыборкаТовары.Количество;
    КонецЦикла;
   
    //  3. Запись движений в БД
    Движения.СвободныеОстатки.Записывать = Истина;
    Движения.Записать();
   
    //  4. Запрос, получающий отрицательные остатки из регистра
    Запрос.Текст =
        "ВЫБРАТЬ
        |   Остатки.Номенклатура КАК Номенклатура,
        |   ПРЕДСТАВЛЕНИЕССЫЛКИ(Остатки.Номенклатура) КАК НоменклатураПредставление,
        |   -Остатки.КоличествоОстаток КАК Дефицит
        |ИЗ
        |   РегистрНакопления.СвободныеОстатки.Остатки(
        |           &МоментВремени,
        |           Номенклатура В
        |               (ВЫБРАТЬ
        |                   Товары.Номенклатура КАК Номенклатура
        |               ИЗ
        |                   Товары КАК Товары)) КАК Остатки
        |ГДЕ
        |   Остатки.КоличествоОстаток < 0";
   
    ГраницаКонтроля = Новый Граница(МоментВремени(), ВидГраницы.Включая);
    Запрос.УстановитьПараметр("МоментВремени", ГраницаКонтроля);
    РезультатЗапроса = Запрос.Выполнить();
   
    //  5. Вывод сообщений о недостатке товаров
    Если Не РезультатЗапроса.Пустой() Тогда
        Отказ = Истина;
        ВыборкаОшибки = РезультатЗапроса.Выбрать();
        Пока ВыборкаОшибки.Следующий() Цикл
            Сообщение = Новый СообщениеПользователю;
            Сообщение.Текст = "Товара "+ВыборкаОшибки.НоменклатураПредставление+" недостаточно в количестве "+ВыборкаОшибки.Дефицит+" шт.";
            Сообщение.Сообщить();
        КонецЦикла;
    КонецЕсли;	   


Процедура ОсновныеДействияФормыПечать(Кнопка) Экспорт//<< Борзилов С.С. 31.08.2023 ТЗ № 000022998
			//Сообщить("Документ записывается перед печатью");
			//ПередЗаписью(ЛОЖЬ,РежимЗаписиДокумента.Запись,);//Антонов
			//ПриЗаписи(ЛОЖЬ); //Антонов
			//ЭтотОбъект.Записать();
			//ПослеЗаписи();
			//>> Борзилов С.С. 31.08.2023 ТЗ № 000022998
Функция ПечатьПредварительныйЗН(ТабДокумент) Экспорт документ З/Н//<< Борзилов С.С. 31.08.2023 ТЗ № 000022998
		Если Модифицированность() Тогда
			#Если клиент Тогда	
				обСообщить("Необходимо записать документ !!!");
			Возврат Неопределено;	 
			#КонецЕсли
		КонецЕсли; 
		//>> Борзилов С.С. 31.08.2023 ТЗ № 000022998
Процедура ОсновныеДействияФормыПечать(Кнопка) Экспорт//<< Борзилов С.С. 31.08.2023 ТЗ № 000022998	
	Если ИмяКнопки ="ПечатьПредварительныйЗН" Тогда
		 ПечатьПредварительныйЗН("ТабДокумент");
	КонецЕсли;	
	//>> Борзилов С.С. 31.08.2023 ТЗ № 000022998
Процедура дкЗаполнитьЛокальнуюДату(мЭтотОбъект) Экспорт//<< Борзилов С.С. 31.08.2023 ТЗ № 000022998
				Если Не ЗначениеЗаполнено(мЭтотОбъект.ЛокальнаяДата) Тогда 
				мЭтотОбъект.ЛокальнаяДата = ЛокальнаяДата(мЭтотОбъект.Дата, мЭтотОбъект.ПодразделениеКомпании.ЧасовойПояс); 
				КонецЕсли  
				//>>Борзилов С.С. 31.08.2023 ТЗ № 000022998 Документ з/н МодульобЪекта, Документ з/н ФормаДокументаНовая,ОбщийМодуль дкДокументы


//<<Борзилов С.С. 06.09.2023 ТЗ№000023000
	Если Состояние = Перечисления.СостояниеЗаказНаряда.ОжидаетКлиента И ЗначениеЗаполнено(ПодвидРемонта) И (ПодвидРемонта.ОсобыйПодвид = Перечисления.ОсобыеПодвидыРемонта.Гарантия ИЛИ ПодвидРемонта.ОсобыйПодвид = Перечисления.ОсобыеПодвидыРемонта.СервисноеМероприятие ИЛИ ПодвидРемонта.ОсобыйПодвид = Перечисления.ОсобыеПодвидыРемонта.Дефектовка)  Тогда
		Чери = Справочники.МаркиАвтомобилей.НайтиПоНаименованию("Chery");
		Омода = Справочники.МаркиАвтомобилей.НайтиПоНаименованию("Omoda");
		Эксид = Справочники.МаркиАвтомобилей.НайтиПоНаименованию("Exeed");
		Если (Автомобиль.МаркаАвтомобиля = Чери ИЛИ Автомобиль.МаркаАвтомобиля = Омода ИЛИ Автомобиль.МаркаАвтомобиля = Эксид ) И Не ЗначениеЗаполнено(Автомобиль.НомерДвигателя) Тогда
			Отказ = Истина;
			Сообщить("Заполните ""Номер двигателя"" в карточке автомобиля");
		КонецЕсли; 
	КонецЕсли;
	//>>Борзилов С.С. 06.09.2023 ТЗ№000023000	//>>Борзилов С.С. 06.09.2023 ТЗ№000023000 ДокументЗаказНаряд МодульОбъекта
	
//<<Борзилов С.С. 19.09.2023  ТЗ№000023121
	// Было:  флМерс = ЭтоМерседесОбщий() или ЭтоТойотаОбщий();
	// Стало: флМерс = ЭтоМерседесОбщий(ПодразделениеКомпании) или ЭтоТойотаОбщий(Ложь,ПодразделениеКомпании);
	флМерс = ЭтоМерседесОбщий(ПодразделениеКомпании) или ЭтоТойотаОбщий(Ложь,ПодразделениеКомпании);
	//>>Борзилов С.С. 19.09.2023  ТЗ№000023121 ДокументЗаявкаНаРемонт: ФормаДокументаНовая


Процедура дкСписокПриОткрытии(ЭтаФорма, ПовторноеОткрытие=Ложь) Экспорт
		удФормаПриОткрытии(ЭтаФорма);
		Если ЭтаФорма.Отбор.Найти("Организация") = Неопределено 
			И ЭтаФорма.Отбор.Найти("Подразделение") = Неопределено Тогда
		Иначе
			//ЭтаФорма.ПодключитьОбработчикИзмененияДанных("Отбор","СписокПриИзмененииОтбора",Истина);
		КонецЕсли;
		Если Не РольДоступна("Администратор") Тогда
			дкСписокЗаполнитьОтборПоУмолчанию(ЭтаФорма);
		КонецЕсли; 
		//<<Борзилов С 19.09.2023 ТЗ   
		Если Не ПовторноеОткрытие Тогда   
		//>>Борзилов С
		дкДобавитьПолеЛокальнаяДатаСписок(ЭтаФорма);//Каричев Г.С. ТЗ 000014645
		//<<Борзилов С 19.09.2023 ТЗ   	
		КонецЕсли;
		//>>Борзилов С 
		
	КонецПроцедуры 
ОбщийМодуль дкДокументы дублирование Локальной даты 

//<<Борзилов С 25.09.2023 ТЗ№000023165
&НаКлиенте
Процедура ПриОткрытии(Отказ)
ПриОткрытииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
Порядок=ЭтаФорма.Список.Порядок;
Порядок.Элементы.Очистить();
ЭлементПорядка = Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
ЭлементПорядка.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
ЭлементПорядка.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Возр;
ЭлементПорядка.Поле = Новый ПолеКомпоновкиДанных("Код"); 
ЭлементПорядка.Использование = Истина;
КонецПроцедуры
//>>Борзилов С 25.09.2023 ТЗ№000023165  СправочникНомерТО Формавыбора

//<<Борзилов С 25.09.2023 ТЗ№000023165
Процедура ПриОткрытии()   
	СправочникСписок.Порядок.Установить("Код возр");
КонецПроцедуры 
//>>Борзилов С 25.09.2023 ТЗ№000023165 СправочникНомерТО ФормаСписка

//<<Борзилов С 25.09.2023 ТЗ№000023165	
			Если Не Основание.ПризнакТО = Справочники.НомерТО.НЕТО Тогда
				НомерТО = Основание.ПризнакТО;
			КонецЕсли;
//>>Борзилов С 25.09.2023 ТЗ№000023165 З/Н Модуль Обработка заполнения 3 раза

//<<Борзилов С 25.09.2023 ТЗ№000023165
	Если Не ЗначениеЗаполнено(ПризнакТО)  Тогда
		Отказ = Истина;
		Сообщить("Необходимо заполнить ""Номер ТО""");	
	КонецЕсли;
//>>Борзилов С 25.09.2023 ТЗ№000023165 З/Н Модуль ПередЗаписью

//<<Борзилов С 25.09.2023 ТЗ№000023165
	Если Состояние = Перечисления.СостояниеЗаказНаряда.Закрыт И ПризнакТО.Пустая() Тогда
		Если Вопрос("Данная Заявка на ремонт ТО?",РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да ТОгда
			Форма = Справочники.НомерТО.ПолучитьФормуВыбора();		
			ПризнакТО = Форма.ОткрытьМодально();
		Иначе
			ПризнакТО = Справочники.НомерТО.НЕТО;
		КонецЕсли;
	КонецЕсли;
//>>Борзилов С 25.09.2023 ТЗ№000023165 З/Н Форма ПередЗаписью
//<<Борзилов С 25.09.2023 ТЗ№000023165	
			Если Не ВыборШ.ПризнакТО = Справочники.НомерТО.НЕТО Тогда
				НомерТО = ВыборШ.ПризнакТО;
			КонецЕсли;
			//>>Борзилов С 25.09.2023 ТЗ№000023165


//<<Борзилов С 25.09.2023 ТЗ№000023165 з/н форма действиеформызапшаб	
				Если Не ВыбранныйШаблон.ПризнакТО = Справочники.НомерТО.НЕТО Тогда
					НомерТО = ВыбранныйШаблон.ПризнакТО;
				КонецЕсли;
//>>Борзилов С 25.09.2023 ТЗ№000023165 З/Н Форма ЗаполнитьПоШаблону 2 раза

//<<Борзилов С 25.09.2023 ТЗ№000023165	
	Если Не ЗаполненоИзЕдиногоШаблона.ПризнакТО = Справочники.НомерТО.НЕТО Тогда
		НомерТО = ЗаполненоИзЕдиногоШаблона.ПризнакТО;
	КонецЕсли;
//>>Борзилов С 25.09.2023 ТЗ№000023165 З/Н Форма ОформлениеПриЕдиномшаблоне

//<<Борзилов С 25.09.2023 ТЗ№000023165
	Если Не ЗначениеЗаполнено(ПризнакТО) Тогда
		Отказ = Истина;	
		Сообщить("Необходимо заполнить ""Признак ТО""");	
	КонецЕсли;
//>>Борзилов С 25.09.2023 ТЗ№000023165 З/НШаблон Модуль Обработка заполнения

//<<Борзилов С 25.09.2023 ТЗ№000023165
	Если Не ЗначениеЗаполнено(ПризнакТО) Тогда
		Отказ = Истина;
		Сообщить("Необходимо заполнить ""Признак ТО""");	
	КонецЕсли;
//>>Борзилов С 25.09.2023 ТЗ№000023165 З/НШаблон Форма ПередЗаписью
//<<Борзилов С 25.09.2023 ТЗ№000023165	
		Если Основание <> Неопределено И Не Основание.ПризнакТО = Справочники.НомерТО.НЕТО Тогда
			НомерТО = Основание.ПризнакТО;
		КонецЕсли;
//>>Борзилов С 25.09.2023 ТЗ№000023165 Заявка/Р Модуль ОбработкаЗаполнения

//<<Борзилов С 25.09.2023 ТЗ№000023165
	Если Не ЗначениеЗаполнено(НомерТО)  Тогда
		Отказ = Истина;
		Сообщить("Необходимо заполнить ""Номер ТО""");	
	КонецЕсли;
//>>Борзилов С 25.09.2023 ТЗ№000023165	Заявка/Р Модуль ПередЗаписью

//<<Борзилов С 25.09.2023 ТЗ№000023165
	Если Состояние = Перечисления.СостоянияЗаявкиНаРемонт.Рабочая И НомерТО.Пустая() Тогда
		Если Вопрос("Данная Заявка на ремонт ТО?",РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да ТОгда
			Форма = Справочники.НомерТО.ПолучитьФормуВыбора();		
			НомерТО = Форма.ОткрытьМодально();
		Иначе
			НомерТО = Справочники.НомерТО.НЕТО;
		КонецЕсли;
	КонецЕсли;
//>>Борзилов С 25.09.2023 ТЗ№000023165	Заявка/Р Форма ПередЗаписью

//<<Борзилов С 25.09.2023 ТЗ№000023165	
					Если Не ВыборШ.ПризнакТО = Справочники.НомерТО.НЕТО Тогда
						НомерТО = ВыборШ.ПризнакТО;
					КонецЕсли;
//>>Борзилов С 25.09.2023 ТЗ№000023165 Заявка/Р Форма ЗапШаблонНажатие 3 раза
